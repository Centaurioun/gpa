-*- outline -*-

In no particular order:

* Rework the Key Generation Wizard to make it simpler and use stock buttons.
  This can probably be done using gtk_dialog_run ().

* Dialogs should check user input and react to it.
** Don't allow the user to go on unless the input makes sense (particularly
   for the advanced key generation dialog and the import dialog).
** Select options automatically if it's clearly what the user intends
   For example, if a filename is written in the export dialog, obviously the
   user intends to export to a file. We should either check the "export to
   file" radio button automatically, or disable the file entry unless it's
   checked.

* Context menus.

* Check the GPAFileSelection. Should it be kept? It's around 20% of the GPA
  code for something GTK already does.

* Add more options to the "Edit key" dialog.
** Manage UID's.
** Manage subkeys.

* Check which options should be available from the toolbar. Draw new icons if
  needed.

* Documentation!

* When/If the gpgme key cache becomes solid enough, we should drop the
  keytable stuff and use gpgme directly.

* All operations (import/export/decrypt/backup, etc) should be carried out
  inside the *_dialog_run functions, to avoid passing too much control info
  back and forth.

* Support a "File Status" (encrypted, signed, etc..) column in the
  filemanager, if GPGME allows it.

* Use the fd/stream gpgme data objects in the filemanager, to support large
  files.
